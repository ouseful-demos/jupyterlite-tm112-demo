name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install mamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.5.8-0'
          environment-file: build_environment.yml
          cache-environment: true
    
      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Build the JupyterLite site
        run: |
          cp README*.md content
          jupyter lite build --contents content --output-dir dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: jupyterlite_dist
          path: ./dist

      - name: Build JupyterBook site
        run: |
          python -m pip install -r requirements-jb.txt
          jupyter kernelspec list  
          jupyter-book build content/work --path-output book_output
          cp -r book_output/_build/html dist/book_output/
          
      - name: Build quarto site
        run: |
          ARCH=$(uname -m) && if [ \"$ARCH\" = \"aarch64\" ] || [ \"$ARCH\" = \"arm64\" ]; then QUARTO_ARCH=\"arm64\"; else QUARTO_ARCH=\"amd64\"; fi && wget \"https://github.com/quarto-dev/quarto-cli/releases/download/v1.6.40/quarto-1.6.40-linux-${QUARTO_ARCH}.tar.gz\" && tar -C ~/opt -xvzf \"quarto-1.6.40-linux-${QUARTO_ARCH}.tar.gz\" && quarto add r-wasm/quarto-live
          quarto render quarto_docs/ --no-execute --output-dir ../quarto_dist
          cp -r quarto_dist/ dist/quarto_output/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
